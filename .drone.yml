workspace:
  base: /go
  path: src/github.com/presslabs/mysql-operator

pipeline:
  build:
    image: golang:1.9
    environment:
      - APP_VERSION=${DRONE_BRANCH/master/latest}
    commands:
      - make full-test
      - make build
      - make install-docker
    when:
      event: push

  build:
    image: golang:1.9
    environment:
      - APP_VERSION=${DRONE_TAG}
    commands:
      - make full-test
      - make build
      - make install-docker
    when:
      event: tag

  publish-operator:
    group: publish
    image: plugins/docker
    registry: quay.io
    repo: quay.io/presslabs/mysql-operator
    username: presslabs+drone
    dockerfile: hack/docker/mysql-operator/Dockerfile
    context: hack/docker/mysql-operator
    tags: ["${DRONE_BRANCH/master/latest}"]
    secrets:
      - source: QUAY_TOKEN
        target: DOCKER_PASSWORD
    when:
      event: push

  publish-operator:
    group: publish
    image: plugins/docker
    registry: quay.io
    repo: quay.io/presslabs/mysql-operator
    username: presslabs+drone
    dockerfile: hack/docker/mysql-operator/Dockerfile
    context: hack/docker/mysql-operator
    tags: ["${DRONE_TAG}"]
    secrets:
      - source: QUAY_TOKEN
        target: DOCKER_PASSWORD
    when:
      event: tag

  publish-helper:
    group: publish
    image: plugins/docker
    registry: quay.io
    repo: quay.io/presslabs/mysql-helper
    username: presslabs+drone
    dockerfile: hack/docker/mysql-helper/Dockerfile
    context: hack/docker/mysql-helper
    tags: ["${DRONE_BRANCH/master/latest}"]
    secrets:
      - source: QUAY_TOKEN
        target: DOCKER_PASSWORD
    when:
      event: push

  publish-helper:
    group: publish
    image: plugins/docker
    registry: quay.io
    repo: quay.io/presslabs/mysql-helper
    username: presslabs+drone
    dockerfile: hack/docker/mysql-helper/Dockerfile
    context: hack/docker/mysql-helper
    tags: ["${DRONE_TAG}"]
    secrets:
      - source: QUAY_TOKEN
        target: DOCKER_PASSWORD
    when:
      event: tag

  publish-helm-chart:
    group: publish
    image: quay.io/presslabs/kluster-toolbox
    pull: true
    environment:
      - GH_USER=presslabs-bot
    commands:
      - cd hack/charts
      - (cd mysql-operator && helm dep build)
      - helm package mysql-operator
      - CHART="$(basename *.tgz)" ; MESSAGE="Publish $(basename $CHART .tgz)"
      - /usr/local/bin/gh put --skip-existing -m "$MESSAGE" "$CHART" "presslabs/charts/docs/"
    secrets:
      - GH_PASSWORD
    when:
      branch: master
      event: push

  # publish-mysql-helper:
  #   group: publish
  #   image: plugins/docker
  #   mirror: https://mirror.gcr.io
  #   registry: gcr.io
  #   repo: gcr.io/pl-infra/mysql-helper
  #   dockerfile: hack/docker/mysql-helper/Dockerfile
  #   username: _json_key
  #   tags: ["${DRONE_BRANCH/master/latest}", "${DRONE_COMMIT_SHA:0:7}"]
  #   force_tag: true
  #   build_args:
  #     - release="${DRONE_COMMIT_SHA:0:7}"
  #   secrets:
  #     - source: GOOGLE_CREDENTIALS
  #       target: DOCKER_PASSWORD
  #   when:
  #     event: push

#  e2e-tests:
#    image: gcr.io/pl-infra/kluster-mysql-helper:latest
#    pull: true
#    secrets:
#      - GOOGLE_CREDENTIALS
#      - GOOGLE_PROJECT_ID
#      - TITANIUM_TEST_GS_CREDENTIALS
#    environment:
#      - TITANIUM_IMAGE_TAG=${DRONE_COMMIT_SHA:0:7}
#      - OPERATOR_IMAGE=gcr.io/pl-infra/mysql-operator:${DRONE_COMMIT_SHA:0:7}
#      - KUBECONFIG=/go/.kube/config
#    commands:
#      - sleep 1


  start-kubernetes:
    image: mydind
    privileged: true
    secrets:
      - GOOGLE_CREDENTIALS
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    secrets:
      - source: QUAY_TOKEN
        target: DOCKER_PASSWORD
    environment:
      - NUM_NODES=1
      - KUBECTL_DIR=/go/kubeadm-dind-cluster
    commands:
      # register container into kubeadm-dind-net network
      # - docker network connect kubeadm-dind-net $HOSTNAME
      - ./hack/e2e-tests/dind-cluster-v1.10.sh up
      - export PATH=/go/kubeadm-dind-cluster:$PATH
      - kubectl get nodes
      - sleep 60

  e2e-tests:
    image: e2e-tests
    environment:
      - APP_VERSION=${DRONE_TAG}
    commands:
      # register container into kubeadm-dind-net network
      - sleep 60
      #- docker network connect kubeadm-dind-net $HOSTNAME
      - export PATH=/go/kubeadm-dind-cluster:$PATH

      - helm init
      - go test ./test/e2e -v --kubernetes-config /go/.kubeadm-dind-cluster --kubernetes-context dind

  stop-kubernetes:
    image: mydind
    privileged: true
    secrets:
      - GOOGLE_CREDENTIALS
    environment:
      - NUM_NODES=1
      - KUBECTL_DIR=/go/.kubeadm-dind-cluster
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    secrets:
      - source: QUAY_TOKEN
        target: DOCKER_PASSWORD
    commands:
      - ./hack/e2e-tests/dind-cluster-v1.10.sh down
    when:
      status: [ success, failure ]
