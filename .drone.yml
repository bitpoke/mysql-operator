---
kind: pipeline
name: default

clone:
  disable: true

workspace:
  base: /workspace
  path: src/github.com/bitpoke/mysql-operator

steps:
- name: git
  image: plugins/git
  settings:
    depth: 0
    tags: true

- name: install dependencies
  image: docker.io/bitpoke/build:v0.7.0
  commands:
  - make -j4 build.tools

- name: verify generated code
  image: docker.io/bitpoke/build:v0.7.0
  commands:
  - make generate
  - git diff --exit-code

- name: lint
  image: docker.io/bitpoke/build:v0.7.0
  commands:
  - make -j4 lint

- name: test
  image: docker.io/bitpoke/build:v0.7.0
  environment:
    ACK_GINKGO_DEPRECATIONS: 1.16.4
  commands:
  - make test

- name: build
  image: docker.io/bitpoke/build:v0.7.0
  commands:
  - make -j4 build

services:
- name: docker
  image: docker:20.10.8-dind-rootless
  environment:
    DOCKER_TLS_CERTDIR: ""

trigger:
  ref:
    - refs/pull/**
    - refs/heads/master
    - refs/heads/release-*
    # CI related changes SHOULD be prefixed with drone-
    - refs/heads/drone-*

---
kind: pipeline
name: publish

trigger:
  ref:
    - refs/tags/**
clone:
  disable: true

workspace:
  base: /workspace
  path: src/github.com/bitpoke/mysql-operator

steps:
- name: git
  image: plugins/git
  settings:
    depth: 0
    tags: true

- name: build
  image: docker.io/bitpoke/build:v0.7.0
  commands:
  - make -j4 build

- name: publish
  image: docker.io/bitpoke/build:v0.7.0
  environment:
    DOCKER_REGISTRY: docker.io/bitpoke
    DOCKER_USERNAME: bitpokebot
    DOCKER_PASSWORD:
      from_secret: DOCKER_PASSWORD
    SSH_KEY:
      from_secret: SSH_KEY
    # make build system happy by setting a branch name on tags
    BRANCH_NAME: release-${DRONE_TAG}
  commands:
  - /usr/local/bin/setup-credentials-helper.sh
  - git config --global user.email "bot@bitpoke.io"
  - git config --global user.name "Bitpoke Bot"
  - git config --global push.default current
  - ssh-keyscan -H github.com > /etc/ssh/ssh_known_hosts
  - make publish

services:
- name: docker
  image: docker:20.10.8-dind-rootless
  environment:
    DOCKER_TLS_CERTDIR: ""

---
kind: pipeline
name: e2e testing

trigger:
  ref:
    - refs/heads/master
    - refs/heads/release-*
    # e2e CI related changes SHOULD be prefixed with drone-e2e-
    - refs/heads/drone-e2e-*

clone:
  disable: true

workspace:
  base: /workspace
  path: src/github.com/bitpoke/mysql-operator

steps:
- name: git
  image: plugins/git
  settings:
    depth: 0
    tags: true

- name: create gke cluster
  image: docker.io/bitpoke/build:v0.7.0
  environment: &e2eEnvironment
    # set version in stone, as we need stable tags for e2e testing
    VERSION: ${DRONE_COMMIT}
    DOCKER_REGISTRY: eu.gcr.io/bitpoke-mysql-operator-testing
    GOOGLE_CREDENTIALS:
      from_secret: E2E_GOOGLE_CREDENTIALS
    GOOGLE_CLOUD_PROJECT: bitpoke-mysql-operator-testing
    GOOGLE_CLOUD_ZONE: europe-west4-b
    CLUSTER_NAME: mysql-operator-e2e-testing-${DRONE_COMMIT:0:8}
    BACKUP_BUCKET_NAME: bitpoke-mysql-operator-testing-backup
  commands:
  - /usr/local/bin/setup-credentials-helper.sh
  - gcloud container clusters create $CLUSTER_NAME
      --zone $GOOGLE_CLOUD_ZONE
      --preemptible
      --cluster-version 1.21
      --addons=GcePersistentDiskCsiDriver
      --monitoring=NONE

- name: build
  image: docker.io/bitpoke/build:v0.7.0
  volumes:
  - name: dockersock
    path: /var/run
  #   <<: *e2eEnvironment
  commands:
  - make -j4 build
  depends_on:
    - git

- name: publish e2e images
  image: docker.io/bitpoke/build:v0.7.0
  environment:
    <<: *e2eEnvironment
  commands:
  - /usr/local/bin/setup-credentials-helper.sh
  - make .img.release.build
  - make img.publish
  depends_on:
    - build

- name: e2e test
  image: docker.io/bitpoke/build:v0.7.0
  environment:
    <<: *e2eEnvironment
    GOOGLE_CLOUD_CLUSTER: mysql-operator-e2e-testing-${DRONE_COMMIT:0:8}
    ACK_GINKGO_DEPRECATIONS: 1.16.4
  commands:
  - /usr/local/bin/setup-credentials-helper.sh
  - make e2e
  depends_on:
    - publish e2e images
    - create gke cluster

- name: delete gke cluster
  image: docker.io/bitpoke/build:v0.7.0
  environment:
    <<: *e2eEnvironment
  commands:
  - /usr/local/bin/setup-credentials-helper.sh
  - gcloud container clusters delete $CLUSTER_NAME
      --quiet
      --async
      --zone $GOOGLE_CLOUD_ZONE
  failure: ignore
  depends_on:
    - e2e test
  when:
    status:
    - success
    - failure

services:
- name: docker
  image: docker:20.10.8-dind-rootless
  environment:
    DOCKER_TLS_CERTDIR: ""
